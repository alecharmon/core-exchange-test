# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class AccountType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    _401A = "401A"
    _401K = "401K"
    _403B = "403B"
    _529 = "529"
    ANNUITY = "ANNUITY"
    AUTOLOAN = "AUTOLOAN"
    BROKERAGEPRODUCT = "BROKERAGEPRODUCT"
    CD = "CD"
    CHARGE = "CHARGE"
    CHECKING = "CHECKING"
    COMMERCIALDEPOSIT = "COMMERCIALDEPOSIT"
    COMMERCIALINVESTMENT = "COMMERCIALINVESTMENT"
    COMMERCIALLINEOFCREDIT = "COMMERCIALLINEOFCREDIT"
    COMMERCIALLOAN = "COMMERCIALLOAN"
    COVERDELL = "COVERDELL"
    CREDITCARD = "CREDITCARD"
    DEFINEDBENEFIT = "DEFINEDBENEFIT"
    ESCROW = "ESCROW"
    ESOP = "ESOP"
    FIXEDANNUITY = "FIXEDANNUITY"
    GUARDIAN = "GUARDIAN"
    HOMEEQUITYLOAN = "HOMEEQUITYLOAN"
    HOMELINEOFCREDIT = "HOMELINEOFCREDIT"
    INSTALLMENT = "INSTALLMENT"
    INSTITUTIONALTRUST = "INSTITUTIONALTRUST"
    IRA = "IRA"
    KEOGH = "KEOGH"
    LINEOFCREDIT = "LINEOFCREDIT"
    LOAN = "LOAN"
    LONGTERMDISABILITY = "LONGTERMDISABILITY"
    MILITARYLOAN = "MILITARYLOAN"
    MONEYMARKET = "MONEYMARKET"
    MORTGAGE = "MORTGAGE"
    NONQUALIFIEDPLAN = "NONQUALIFIEDPLAN"
    OTHERDEPOSIT = "OTHERDEPOSIT"
    OTHERINVESTMENT = "OTHERINVESTMENT"
    PERSONALLOAN = "PERSONALLOAN"
    ROLLOVER = "ROLLOVER"
    ROTH = "ROTH"
    SARSEP = "SARSEP"
    SAVINGS = "SAVINGS"
    SMBLOAN = "SMBLOAN"
    SHORTTERMDISABILITY = "SHORTTERMDISABILITY"
    STUDENTLOAN = "STUDENTLOAN"
    TAXABLE = "TAXABLE"
    TDA = "TDA"
    TERM = "TERM"
    TRUST = "TRUST"
    UGMA = "UGMA"
    UNIVERSALLIFE = "UNIVERSALLIFE"
    UTMA = "UTMA"
    VARIABLEANNUITY = "VARIABLEANNUITY"
    WHOLELIFE = "WHOLELIFE"
    def __init__(self):  # noqa: E501
        """AccountType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'AccountType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccountType of this AccountType.  # noqa: E501
        :rtype: AccountType
        """
        return util.deserialize_model(dikt, cls)
