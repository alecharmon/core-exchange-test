# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.account_descriptor import AccountDescriptor
from openapi_server import util

from openapi_server.models.account_descriptor import AccountDescriptor  # noqa: E501

class AccountWithDescriptorOneOf5(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annuity_account=None):  # noqa: E501
        """AccountWithDescriptorOneOf5 - a model defined in OpenAPI

        :param annuity_account: The annuity_account of this AccountWithDescriptorOneOf5.  # noqa: E501
        :type annuity_account: AccountDescriptor
        """
        self.openapi_types = {
            'annuity_account': AccountDescriptor
        }

        self.attribute_map = {
            'annuity_account': 'annuityAccount'
        }

        self._annuity_account = annuity_account

    @classmethod
    def from_dict(cls, dikt) -> 'AccountWithDescriptorOneOf5':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccountWithDescriptor_oneOf_5 of this AccountWithDescriptorOneOf5.  # noqa: E501
        :rtype: AccountWithDescriptorOneOf5
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annuity_account(self):
        """Gets the annuity_account of this AccountWithDescriptorOneOf5.


        :return: The annuity_account of this AccountWithDescriptorOneOf5.
        :rtype: AccountDescriptor
        """
        return self._annuity_account

    @annuity_account.setter
    def annuity_account(self, annuity_account):
        """Sets the annuity_account of this AccountWithDescriptorOneOf5.


        :param annuity_account: The annuity_account of this AccountWithDescriptorOneOf5.
        :type annuity_account: AccountDescriptor
        """
        if annuity_account is None:
            raise ValueError("Invalid value for `annuity_account`, must not be `None`")  # noqa: E501

        self._annuity_account = annuity_account
