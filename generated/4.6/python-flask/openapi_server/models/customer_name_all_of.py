# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class CustomerNameAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prefix=None):  # noqa: E501
        """CustomerNameAllOf - a model defined in OpenAPI

        :param prefix: The prefix of this CustomerNameAllOf.  # noqa: E501
        :type prefix: str
        """
        self.openapi_types = {
            'prefix': str
        }

        self.attribute_map = {
            'prefix': 'prefix'
        }

        self._prefix = prefix

    @classmethod
    def from_dict(cls, dikt) -> 'CustomerNameAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CustomerName_allOf of this CustomerNameAllOf.  # noqa: E501
        :rtype: CustomerNameAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prefix(self):
        """Gets the prefix of this CustomerNameAllOf.

        Name prefix, e.g. Mr.  # noqa: E501

        :return: The prefix of this CustomerNameAllOf.
        :rtype: str
        """
        return self._prefix

    @prefix.setter
    def prefix(self, prefix):
        """Sets the prefix of this CustomerNameAllOf.

        Name prefix, e.g. Mr.  # noqa: E501

        :param prefix: The prefix of this CustomerNameAllOf.
        :type prefix: str
        """

        self._prefix = prefix
