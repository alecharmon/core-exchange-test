/*
 * FDX V5.0
 *
 * ## FDX compliance  The Core Exchange API specifications are a subset of the Financial Data Exchange (FDX) API specification, the usage thereof (or any part thereof) constitutes acceptance of the FDX API License Agreement, which can be found at https://financialdataexchange.org/. The FDX API specification is distributed exclusively by FDX. Modifications to eliminate required or conditional elements prescribed in the FDX API Certification Use Cases will render any implementations using said modifications non-conformant with the FDX API Certification Use Cases. Please note that building the FDX-compliant Core Exchange API and permitting Plaid to call your build constitutes acceptance of the FDX end user license agreement, which can be found at https://financialdataexchange.org/. The full FDX API standard specification is distributed exclusively by FDX.  ## Download the specification  To view this specification and documentation as an openapi yaml file, see [the public Core Exchange Github repository](https://github.com/plaid/core-exchange/blob/main/dist/versions).  ## Endpoints  This specification contains the following endpoints:    - `/customers/current`    - `/accounts`    - `/accounts/{accountId}`    - `/accounts/{accountId}/payment-networks`    - `/accounts/{accountId}/contact`    - `/accounts/{accountId}/transactions`  ## Mock server  See the [mock server postman collection](/core-exchange/example) for Core Exchange v5.0. 
 *
 * API version: 5.0.0
 * Contact: dataconnectivity@plaid.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// Holding - A holding in an investment account. Plaid maps the `holding` and the `investmentAccount` FDX models to its securities models, which hold universal information like the ticker symbol, and to its holdings models, which hold account-specific information like balances. For more information, see [Plaid investments](https://plaid.com/docs/investments/#securities-and-holdings). 
type Holding struct {

	// Plaid requires this field and `securityIdType` for: - holding types that use security IDs, such as stocks and options. - transactions involving such holding types. If you return this for a holding, Plaid looks up the close price from NYSE Group Security Master using the security ID. If you don't return this for a holding that uses security IDs (not recommended), Plaid uses the `currentUnitPrice` you return as the close price. 
	SecurityId string `json:"securityId,omitempty"`

	SecurityIdType SecurityIdType `json:"securityIdType,omitempty"`

	// Holding name or security name
	HoldingName string `json:"holdingName,omitempty"`

	HoldingType HoldingType `json:"holdingType,omitempty"`

	HoldingSubType HoldingSubType `json:"holdingSubType,omitempty"`

	// Ticker / Market symbol
	Symbol string `json:"symbol,omitempty"`

	// Price of holding at the time of purchase. Plaid determines an approximate [cost basis](https://plaid.com/docs/api/products/investments/#investments-holdings-get-response-holdings-cost-basis) using the purchase price and the number of units. Plaid cannot take fees into account to determine the cost basis because the FDX holding schema doesn't include fees. 
	PurchasedPrice float32 `json:"purchasedPrice,omitempty"`

	// Current unit price. Plaid uses this as the [institution_price](https://plaid.com/docs/api/products/investments/#investments-holdings-get-response-holdings-institution-price). Plaid falls back to using this as the [close price](https://plaid.com/docs/api/products/investments/#investments-holdings-get-response-securities-close-price) if you don't return `securityId` for holdings involving securities. 
	CurrentUnitPrice float32 `json:"currentUnitPrice,omitempty"`

	// ISO 8601 full-date in format 'YYYY-MM-DD' according to [IETF RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14)
	CurrentUnitPriceDate string `json:"currentUnitPriceDate,omitempty"`

	// Plaid requires this field for holdings and transactions involving securities. For security-based actions other than stock splits, quantity. Shares for stocks, mutual funds, and others. Face value for bonds. Contracts for options. 
	Units float32 `json:"units,omitempty"`

	// Market value at the time of data retrieved
	MarketValue float32 `json:"marketValue"`

	// Required for bonds. Face value at the time of data retrieved. If this isn't present, Plaid assumes the holding  isn't a bond and falls back to `marketValue`. 
	FaceValue float32 `json:"faceValue,omitempty"`

	// If true, indicates that this holding is used to maintain proceeds from sales, dividends, and other cash postings to the investment account. If you don't set a value for `isCashEquivalent` in the `fiAttributes` array, then Plaid uses `cashAccount` in determining the [is_cash_equivalent](https://plaid.com/docs/api/products/investments/#investments-holdings-get-response-securities-is-cash-equivalent) status. 
	CashAccount bool `json:"cashAccount"`

	Currency Currency `json:"currency,omitempty"`

	// Array of financial institution-specific attributes. Plaid recommends including a value for [is_cash_equivalent](https://plaid.com/docs/api/products/investments/#investments-holdings-get-response-securities-is-cash-equivalent) property in this array. Plaid accepts `isCashEquivalent` as the name and a string `true` or `false` as the value. If you return a value for `isCashEquivalent`, then return the same value for `cashAccount` as a boolean. 
	FiAttributes []FiAttribute `json:"fiAttributes,omitempty"`
}
