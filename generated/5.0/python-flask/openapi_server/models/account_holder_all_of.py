# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.account_holder_relationship import AccountHolderRelationship
from openapi_server import util

from openapi_server.models.account_holder_relationship import AccountHolderRelationship  # noqa: E501

class AccountHolderAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, relationship=None):  # noqa: E501
        """AccountHolderAllOf - a model defined in OpenAPI

        :param relationship: The relationship of this AccountHolderAllOf.  # noqa: E501
        :type relationship: AccountHolderRelationship
        """
        self.openapi_types = {
            'relationship': AccountHolderRelationship
        }

        self.attribute_map = {
            'relationship': 'relationship'
        }

        self._relationship = relationship

    @classmethod
    def from_dict(cls, dikt) -> 'AccountHolderAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccountHolder_allOf of this AccountHolderAllOf.  # noqa: E501
        :rtype: AccountHolderAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def relationship(self):
        """Gets the relationship of this AccountHolderAllOf.


        :return: The relationship of this AccountHolderAllOf.
        :rtype: AccountHolderRelationship
        """
        return self._relationship

    @relationship.setter
    def relationship(self, relationship):
        """Sets the relationship of this AccountHolderAllOf.


        :param relationship: The relationship of this AccountHolderAllOf.
        :type relationship: AccountHolderRelationship
        """

        self._relationship = relationship
