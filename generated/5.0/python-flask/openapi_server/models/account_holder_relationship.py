# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class AccountHolderRelationship(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AUTHORIZED_USER = "AUTHORIZED_USER"
    BUSINESS = "BUSINESS"
    FOR_BENEFIT_OF = "FOR_BENEFIT_OF"
    FOR_BENEFIT_OF_PRIMARY = "FOR_BENEFIT_OF_PRIMARY"
    FOR_BENEFIT_OF_PRIMARY_JOINT_RESTRICTED = "FOR_BENEFIT_OF_PRIMARY_JOINT_RESTRICTED"
    FOR_BENEFIT_OF_SECONDARY = "FOR_BENEFIT_OF_SECONDARY"
    FOR_BENEFIT_OF_SECONDARY_JOINT_RESTRICTED = "FOR_BENEFIT_OF_SECONDARY_JOINT_RESTRICTED"
    FOR_BENEFIT_OF_SOLE_OWNER_RESTRICTED = "FOR_BENEFIT_OF_SOLE_OWNER_RESTRICTED"
    POWER_OF_ATTORNEY = "POWER_OF_ATTORNEY"
    PRIMARY_JOINT_TENANTS = "PRIMARY_JOINT_TENANTS"
    PRIMARY = "PRIMARY"
    PRIMARY_BORROWER = "PRIMARY_BORROWER"
    PRIMARY_JOINT = "PRIMARY_JOINT"
    SECONDARY = "SECONDARY"
    SECONDARY_JOINT_TENANTS = "SECONDARY_JOINT_TENANTS"
    SECONDARY_BORROWER = "SECONDARY_BORROWER"
    SECONDARY_JOINT = "SECONDARY_JOINT"
    SOLE_OWNER = "SOLE_OWNER"
    TRUSTEE = "TRUSTEE"
    UNIFORM_TRANSFER_TO_MINOR = "UNIFORM_TRANSFER_TO_MINOR"
    def __init__(self):  # noqa: E501
        """AccountHolderRelationship - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'AccountHolderRelationship':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccountHolderRelationship of this AccountHolderRelationship.  # noqa: E501
        :rtype: AccountHolderRelationship
        """
        return util.deserialize_model(dikt, cls)
