# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.account_payment_network import AccountPaymentNetwork
from openapi_server.models.page_metadata import PageMetadata
from openapi_server import util

from openapi_server.models.account_payment_network import AccountPaymentNetwork  # noqa: E501
from openapi_server.models.page_metadata import PageMetadata  # noqa: E501

class AccountPaymentNetworkList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, page=None, payment_networks=None):  # noqa: E501
        """AccountPaymentNetworkList - a model defined in OpenAPI

        :param page: The page of this AccountPaymentNetworkList.  # noqa: E501
        :type page: PageMetadata
        :param payment_networks: The payment_networks of this AccountPaymentNetworkList.  # noqa: E501
        :type payment_networks: List[AccountPaymentNetwork]
        """
        self.openapi_types = {
            'page': PageMetadata,
            'payment_networks': List[AccountPaymentNetwork]
        }

        self.attribute_map = {
            'page': 'page',
            'payment_networks': 'paymentNetworks'
        }

        self._page = page
        self._payment_networks = payment_networks

    @classmethod
    def from_dict(cls, dikt) -> 'AccountPaymentNetworkList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccountPaymentNetworkList of this AccountPaymentNetworkList.  # noqa: E501
        :rtype: AccountPaymentNetworkList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page(self):
        """Gets the page of this AccountPaymentNetworkList.


        :return: The page of this AccountPaymentNetworkList.
        :rtype: PageMetadata
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this AccountPaymentNetworkList.


        :param page: The page of this AccountPaymentNetworkList.
        :type page: PageMetadata
        """

        self._page = page

    @property
    def payment_networks(self):
        """Gets the payment_networks of this AccountPaymentNetworkList.

        Array of payment networks. Plaid expects your organization to return an empty array if this information isn't available. Not all deposit accounts support ACH transfers. For example, a prepaid debit card account doesn't support ACH.   # noqa: E501

        :return: The payment_networks of this AccountPaymentNetworkList.
        :rtype: List[AccountPaymentNetwork]
        """
        return self._payment_networks

    @payment_networks.setter
    def payment_networks(self, payment_networks):
        """Sets the payment_networks of this AccountPaymentNetworkList.

        Array of payment networks. Plaid expects your organization to return an empty array if this information isn't available. Not all deposit accounts support ACH transfers. For example, a prepaid debit card account doesn't support ACH.   # noqa: E501

        :param payment_networks: The payment_networks of this AccountPaymentNetworkList.
        :type payment_networks: List[AccountPaymentNetwork]
        """
        if payment_networks is None:
            raise ValueError("Invalid value for `payment_networks`, must not be `None`")  # noqa: E501
        if payment_networks is not None and len(payment_networks) < 1:
            raise ValueError("Invalid value for `payment_networks`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._payment_networks = payment_networks
