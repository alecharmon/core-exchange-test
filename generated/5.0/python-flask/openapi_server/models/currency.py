# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.iso4217_code import Iso4217Code
from openapi_server import util

from openapi_server.models.iso4217_code import Iso4217Code  # noqa: E501

class Currency(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency_code=None):  # noqa: E501
        """Currency - a model defined in OpenAPI

        :param currency_code: The currency_code of this Currency.  # noqa: E501
        :type currency_code: Iso4217Code
        """
        self.openapi_types = {
            'currency_code': Iso4217Code
        }

        self.attribute_map = {
            'currency_code': 'currencyCode'
        }

        self._currency_code = currency_code

    @classmethod
    def from_dict(cls, dikt) -> 'Currency':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Currency of this Currency.  # noqa: E501
        :rtype: Currency
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency_code(self):
        """Gets the currency_code of this Currency.


        :return: The currency_code of this Currency.
        :rtype: Iso4217Code
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this Currency.


        :param currency_code: The currency_code of this Currency.
        :type currency_code: Iso4217Code
        """
        if currency_code is None:
            raise ValueError("Invalid value for `currency_code`, must not be `None`")  # noqa: E501

        self._currency_code = currency_code
